// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SongsAPI.Data;

#nullable disable

namespace SongsAPI.Migrations
{
    [DbContext(typeof(SongsDbContext))]
    [Migration("20250725155715_Feeding3")]
    partial class Feeding3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SongsAPI.Models.Songs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Singer")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Songs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Genre = "Italian pop",
                            Name = "Torna a casa",
                            Singer = "Damiano David"
                        },
                        new
                        {
                            Id = 2,
                            Genre = "Pop",
                            Name = "Bad Blood",
                            Singer = "Taylor Swift"
                        },
                        new
                        {
                            Id = 3,
                            Genre = "Classic",
                            Name = "The show must go on",
                            Singer = "Fredy Mercury with Queen"
                        },
                        new
                        {
                            Id = 4,
                            Genre = "Russian folk",
                            Name = "Prince Igor",
                            Singer = "Natasha Morozova"
                        },
                        new
                        {
                            Id = 5,
                            Genre = "Italian pop",
                            Name = "Next Summer",
                            Singer = "Damiano David"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
